{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  accessToken: '',\n  refreshToken: '',\n  logged: false\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState: initialState,\n  reducers: {\n    isLogged(state, action) {\n      if (state.accessToken === '' || state.refreshToken === '') {\n        state.logged = false;\n      } else {\n        state.logged = true;\n      }\n    }\n\n  }\n});\nexport const {\n  changeAccToken,\n  changeRefToken,\n  isLogged\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","accessToken","refreshToken","logged","loginSlice","name","reducers","isLogged","state","action","changeAccToken","changeRefToken","actions","reducer"],"sources":["C:/Users/QUACK/Desktop/Society Capital/society_capital/src/redux/slices/loginSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  accessToken: '',\r\n  refreshToken: '',\r\n  logged: false,\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState: initialState,\r\n  reducers: {\r\n    isLogged(state, action) {\r\n      if (state.accessToken === '' || state.refreshToken === '') {\r\n        state.logged = false\r\n      } else {\r\n        state.logged = true\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeAccToken, changeRefToken, isLogged } = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EADM;EAEnBC,YAAY,EAAE,EAFK;EAGnBC,MAAM,EAAE;AAHW,CAArB;AAMA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAD8B;EAEpCL,YAAY,EAAEA,YAFsB;EAGpCM,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtB,IAAID,KAAK,CAACP,WAAN,KAAsB,EAAtB,IAA4BO,KAAK,CAACN,YAAN,KAAuB,EAAvD,EAA2D;QACzDM,KAAK,CAACL,MAAN,GAAe,KAAf;MACD,CAFD,MAEO;QACLK,KAAK,CAACL,MAAN,GAAe,IAAf;MACD;IACF;;EAPO;AAH0B,CAAD,CAA9B;AAcP,OAAO,MAAM;EAAEO,cAAF;EAAkBC,cAAlB;EAAkCJ;AAAlC,IAA+CH,UAAU,CAACQ,OAAhE;AAEP,eAAeR,UAAU,CAACS,OAA1B"},"metadata":{},"sourceType":"module"}