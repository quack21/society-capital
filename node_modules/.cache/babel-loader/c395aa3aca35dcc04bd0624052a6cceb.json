{"ast":null,"code":"const moneyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nconst penniesFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nconst percentFormatter = new Intl.NumberFormat('en-US', {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2\n});\nexport default class Util {\n  static percentToValue(percent) {\n    let value = parseFloat(percent);\n\n    if (isNaN(value)) {\n      return NaN;\n    }\n\n    if (value < 0) {\n      return 0;\n    }\n\n    return value / 100;\n  }\n\n  static moneyToValue(money) {\n    if (money === undefined) return '';\n    let value = parseInt(money.replace(/\\D/g, ''));\n    return !isNaN(value) ? value : '';\n  }\n\n  static moneyValue(amount) {\n    let showPennies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let withSymbol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (amount === null || amount === '') return '';\n    let value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\n\n    if (withSymbol === false) {\n      return value.substring(1);\n    }\n\n    return value;\n  }\n\n  static percentValue(amount, withSymbol) {\n    if (amount === null || amount === '') return '';\n    let value = percentFormatter.format(amount);\n\n    if (withSymbol === false) {\n      return value.substring(0, value.length - 1);\n    }\n\n    return value;\n  }\n\n  static numberValueOrDefault(value, minValue, defaultValue) {\n    if (value == null || isNaN(value) || value < minValue) return defaultValue;\n    return value;\n  }\n\n  static numberValueInSetOrDefault(value, possibleValues, defaultValue) {\n    if (!Array.isArray(possibleValues)) throw 'possibleValues must be an array.';\n    if (value == null || isNaN(value) || !possibleValues.includes(value)) return defaultValue;\n    return value;\n  }\n\n}","map":{"version":3,"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Util","percentToValue","percent","value","parseFloat","isNaN","NaN","moneyToValue","money","undefined","parseInt","replace","moneyValue","amount","showPennies","withSymbol","format","substring","percentValue","length","numberValueOrDefault","minValue","defaultValue","numberValueInSetOrDefault","possibleValues","Array","isArray","includes"],"sources":["C:/Users/QUACK/Desktop/Society Capital/society_capital/src/components/mortgageCalc/Util.js"],"sourcesContent":["const moneyFormatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 0,\r\n});\r\n\r\nconst penniesFormatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nconst percentFormatter = new Intl.NumberFormat('en-US', {\r\n  style: 'percent',\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport default class Util {\r\n  static percentToValue(percent) {\r\n    let value = parseFloat(percent);\r\n    if (isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    if (value < 0) {\r\n      return 0;\r\n    }\r\n    return value / 100;\r\n  }\r\n\r\n  static moneyToValue(money) {\r\n    if (money === undefined) return '';\r\n    let value = parseInt(money.replace(/\\D/g, ''));\r\n    return !isNaN(value) ? value : '';\r\n  }\r\n\r\n  static moneyValue(amount, showPennies = false, withSymbol = true) {\r\n    if (amount === null || amount === '') return '';\r\n    let value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\r\n    if (withSymbol === false) {\r\n      return value.substring(1);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  static percentValue(amount, withSymbol) {\r\n    if (amount === null || amount === '') return '';\r\n    let value = percentFormatter.format(amount);\r\n    if (withSymbol === false) {\r\n      return value.substring(0, value.length - 1);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  static numberValueOrDefault(value, minValue, defaultValue) {\r\n    if (value == null || isNaN(value) || value < minValue) return defaultValue;\r\n    return value;\r\n  }\r\n\r\n  static numberValueInSetOrDefault(value, possibleValues, defaultValue) {\r\n    if (!Array.isArray(possibleValues)) throw 'possibleValues must be an array.';\r\n    if (value == null || isNaN(value) || !possibleValues.includes(value)) return defaultValue;\r\n    return value;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE,KAF0C;EAGpDC,qBAAqB,EAAE,CAH6B;EAIpDC,qBAAqB,EAAE;AAJ6B,CAA/B,CAAvB;AAOA,MAAMC,gBAAgB,GAAG,IAAIN,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACtDC,KAAK,EAAE,UAD+C;EAEtDC,QAAQ,EAAE,KAF4C;EAGtDC,qBAAqB,EAAE,CAH+B;EAItDC,qBAAqB,EAAE;AAJ+B,CAA/B,CAAzB;AAOA,MAAME,gBAAgB,GAAG,IAAIP,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACtDC,KAAK,EAAE,SAD+C;EAEtDE,qBAAqB,EAAE,CAF+B;EAGtDC,qBAAqB,EAAE;AAH+B,CAA/B,CAAzB;AAMA,eAAe,MAAMG,IAAN,CAAW;EACH,OAAdC,cAAc,CAACC,OAAD,EAAU;IAC7B,IAAIC,KAAK,GAAGC,UAAU,CAACF,OAAD,CAAtB;;IACA,IAAIG,KAAK,CAACF,KAAD,CAAT,EAAkB;MAChB,OAAOG,GAAP;IACD;;IACD,IAAIH,KAAK,GAAG,CAAZ,EAAe;MACb,OAAO,CAAP;IACD;;IACD,OAAOA,KAAK,GAAG,GAAf;EACD;;EAEkB,OAAZI,YAAY,CAACC,KAAD,EAAQ;IACzB,IAAIA,KAAK,KAAKC,SAAd,EAAyB,OAAO,EAAP;IACzB,IAAIN,KAAK,GAAGO,QAAQ,CAACF,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAD,CAApB;IACA,OAAO,CAACN,KAAK,CAACF,KAAD,CAAN,GAAgBA,KAAhB,GAAwB,EAA/B;EACD;;EAEgB,OAAVS,UAAU,CAACC,MAAD,EAAiD;IAAA,IAAxCC,WAAwC,uEAA1B,KAA0B;IAAA,IAAnBC,UAAmB,uEAAN,IAAM;IAChE,IAAIF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,EAAlC,EAAsC,OAAO,EAAP;IACtC,IAAIV,KAAK,GAAGW,WAAW,GAAGhB,gBAAgB,CAACkB,MAAjB,CAAwBH,MAAxB,CAAH,GAAqCtB,cAAc,CAACyB,MAAf,CAAsBH,MAAtB,CAA5D;;IACA,IAAIE,UAAU,KAAK,KAAnB,EAA0B;MACxB,OAAOZ,KAAK,CAACc,SAAN,CAAgB,CAAhB,CAAP;IACD;;IACD,OAAOd,KAAP;EACD;;EAEkB,OAAZe,YAAY,CAACL,MAAD,EAASE,UAAT,EAAqB;IACtC,IAAIF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,EAAlC,EAAsC,OAAO,EAAP;IACtC,IAAIV,KAAK,GAAGJ,gBAAgB,CAACiB,MAAjB,CAAwBH,MAAxB,CAAZ;;IACA,IAAIE,UAAU,KAAK,KAAnB,EAA0B;MACxB,OAAOZ,KAAK,CAACc,SAAN,CAAgB,CAAhB,EAAmBd,KAAK,CAACgB,MAAN,GAAe,CAAlC,CAAP;IACD;;IACD,OAAOhB,KAAP;EACD;;EAE0B,OAApBiB,oBAAoB,CAACjB,KAAD,EAAQkB,QAAR,EAAkBC,YAAlB,EAAgC;IACzD,IAAInB,KAAK,IAAI,IAAT,IAAiBE,KAAK,CAACF,KAAD,CAAtB,IAAiCA,KAAK,GAAGkB,QAA7C,EAAuD,OAAOC,YAAP;IACvD,OAAOnB,KAAP;EACD;;EAE+B,OAAzBoB,yBAAyB,CAACpB,KAAD,EAAQqB,cAAR,EAAwBF,YAAxB,EAAsC;IACpE,IAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,cAAd,CAAL,EAAoC,MAAM,kCAAN;IACpC,IAAIrB,KAAK,IAAI,IAAT,IAAiBE,KAAK,CAACF,KAAD,CAAtB,IAAiC,CAACqB,cAAc,CAACG,QAAf,CAAwBxB,KAAxB,CAAtC,EAAsE,OAAOmB,YAAP;IACtE,OAAOnB,KAAP;EACD;;AA7CuB"},"metadata":{},"sourceType":"module"}